name: integration-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  integration-test:
    name: integration-test
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      # Docker is pre-installed on GitHub's Ubuntu 22.04 runner
      - name: Verify Docker Installation
        run: |
          docker --version
          docker info

      - name: Generate mocks
        run: |
          # Install mockgen
          go install github.com/golang/mock/mockgen@v1.6.0
          
          echo "Generating AWS API mocks directly..."
          mkdir -p pkg/awsapi/mocks
          
          # Generate mocks directly to fix import issues
          mockgen -destination=pkg/awsapi/mocks/mock_eksiface.go -package=mock_awsapi github.com/aws/aws-sdk-go/service/eks/eksiface EKSAPI
          mockgen -destination=pkg/awsapi/mocks/mock_iamiface.go -package=mock_awsapi github.com/aws/aws-sdk-go/service/iam/iamiface IAMAPI
          mockgen -destination=pkg/awsapi/mocks/mock_stsiface.go -package=mock_awsapi github.com/aws/aws-sdk-go/service/sts/stsiface STSAPI

      - name: Build
        run: |
          make docker-build

      # Use standard KIND installation from GitHub Actions
      - name: Install KIND
        uses: helm/kind-action@v1.8.0
        with:
          install_only: true

      - name: Create Kubeconfig directory
        run: |
          mkdir -p hack/tools
          echo "KUBECONFIG=${{ github.workspace }}/hack/tools/kubeconfig" >> $GITHUB_ENV

      - name: Create KIND cluster
        run: |
          kind create cluster --name iam-manager-test --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig --wait 5m
          echo "Using KIND cluster 'iam-manager-test'"
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig config use-context kind-iam-manager-test
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig cluster-info
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig get nodes -o wide

      - name: Generate test ConfigMap
        run: |
          ./hack/generate-test-configmap.sh

      - name: Create required namespaces
        run: |
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig create namespace dev
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig create namespace iam-manager-system
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig get namespaces

      - name: Deploy CRDs and test ConfigMap
        run: |
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig apply -f config/crd/bases/
          kubectl --kubeconfig=${{ github.workspace }}/hack/tools/kubeconfig apply -f hack/test/test-configmap.yaml

      - name: Run Integration Tests
        run: |
          GO_TEST_MODE=true \
          KUBECONFIG=${{ github.workspace }}/hack/tools/kubeconfig \
          go test -tags=integration ./internal/controllers/... ./pkg/awsapi/... -v

      - name: Cleanup KIND resources
        if: always()
        run: |
          kind delete cluster --name iam-manager-test
