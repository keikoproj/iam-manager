apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: iam-manager
    control-plane: controller-manager
  name: iam-manager-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  labels:
    app: iam-manager
  name: iamroles.iammanager.keikoproj.io
spec:
  group: iammanager.keikoproj.io
  names:
    kind: Iamrole
    listKind: IamroleList
    plural: iamroles
    shortNames:
    - iam
    singular: iamrole
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: Iamrole is the Schema for the iamroles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IamroleSpec defines the desired state of Iamrole
            properties:
              AssumeRolePolicyDocument:
                properties:
                  Statement:
                    description: Statement allows list of TrustPolicyStatement objects
                    items:
                      description: TrustPolicy struct holds Trust policy
                      properties:
                        Action:
                          description: Action can be performed
                          type: string
                        Condition:
                          description: Condition struct holds Condition
                          properties:
                            StringEquals:
                              additionalProperties:
                                type: string
                              description: StringEquals can be used to define Equal
                                condition
                              type: object
                            StringLike:
                              additionalProperties:
                                type: string
                              description: StringLike can be used for regex as supported
                                by AWS
                              type: object
                          type: object
                        Effect:
                          description: Effect allowed/denied
                          enum:
                          - Allow
                          - Deny
                          type: string
                        Principal:
                          description: Principal struct holds AWS principal
                          properties:
                            AWS:
                              description: StringOrStrings type accepts one string or
                                multiple strings
                              items:
                                type: string
                              type: array
                            Federated:
                              type: string
                            Service:
                              type: string
                          type: object
                      type: object
                    type: array
                  Version:
                    description: Version specifies IAM policy version By default, this
                      value is "2012-10-17"
                    type: string
                type: object
              PolicyDocument:
                description: PolicyDocument type defines IAM policy struct
                properties:
                  Statement:
                    description: Statement allows list of statement object
                    items:
                      description: Statement type defines the AWS IAM policy statement
                      properties:
                        Action:
                          description: Action allowed on specific resources
                          items:
                            type: string
                          type: array
                        Effect:
                          description: Effect allowed/denied
                          enum:
                          - Allow
                          - Deny
                          type: string
                        Resource:
                          description: Resources defines target resources which IAM
                            policy will be applied
                          items:
                            type: string
                          type: array
                        Sid:
                          description: Sid is an optional field which describes the
                            specific statement action
                          type: string
                      required:
                      - Action
                      - Effect
                      - Resource
                      type: object
                    type: array
                  Version:
                    description: Version specifies IAM policy version By default, this
                      value is "2012-10-17"
                    type: string
                required:
                - Statement
                type: object
              RoleName:
                description: RoleName can be passed only for privileged namespaces.
                  This will be respected only during new iamrole creation and will be
                  ignored during iamrole update Please check the documentation for more
                  on how to configure privileged namespace using annotation for iam-manager
                type: string
            required:
            - PolicyDocument
            type: object
          status:
            description: IamroleStatus defines the observed state of Iamrole
            properties:
              errorDescription:
                description: ErrorDescription in case of error
                type: string
              lastUpdatedTimestamp:
                description: LastUpdatedTimestamp represents the last time the iam role
                  has been modified
                format: date-time
                type: string
              retryCount:
                description: RetryCount in case of error
                type: integer
              roleARN:
                description: RoleARN represents the ARN of an IAM role
                type: string
              roleID:
                description: RoleID represents the unique ID of the role which can be
                  used in S3 policy etc
                type: string
              roleName:
                description: RoleName represents the name of the iam role created in
                  AWS
                type: string
              state:
                description: State of the resource
                type: string
            required:
            - retryCount
            type: object
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: iam-manager
  name: iam-manager-leader-election-role
  namespace: iam-manager-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app: iam-manager
  name: iam-manager-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - iammanager.keikoproj.io
  resources:
  - iamroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - iammanager.keikoproj.io
  resources:
  - iamroles/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: iam-manager
  name: iam-manager-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: iam-manager
  name: iam-manager-leader-election-rolebinding
  namespace: iam-manager-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: iam-manager-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: iam-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: iam-manager
  name: iam-manager-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: iam-manager-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: iam-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: iam-manager
  name: iam-manager-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: iam-manager-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: iam-manager-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    app: iam-manager
    control-plane: controller-manager
  name: iam-manager-controller-manager-metrics-service
  namespace: iam-manager-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app: iam-manager
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iam-manager
    control-plane: controller-manager
  name: iam-manager-controller-manager
  namespace: iam-manager-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iam-manager
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: k8s-cluster-iam-manager-role
      labels:
        app: iam-manager
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: keikoproj/iam-manager:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
